# options:
#   substitutionOption: ALLOW_LOOSE
#   # se vuoi gestire i log in un bucket regionale di tua proprietà:
#   defaultLogsBucketBehavior: REGIONAL_USER_OWNED_BUCKET

# substitutions:
#   _SERVICE: "webapppalestra"
#   _REGION: "us-east1"
#   _INSTANCE: "cloud-palestra-athena:us-east1:fitness-manager"

# steps:
#   # 1) Costruisci l’immagine dal Dockerfile
#   - name: "gcr.io/cloud-builders/docker"
#     args:
#       - "build"
#       - "-t"
#       - "gcr.io/$PROJECT_ID/$_SERVICE:$COMMIT_SHA"
#       - "."

#   # 2) (implicit) il push dell’immagine è gestito da `images:` qui sotto

#   # 3) Deploy su Cloud Run
#   - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
#     entrypoint: "bash"
#     args:
#       - "-c"
#       - |
#         gcloud run deploy $_SERVICE \
#           --image gcr.io/$PROJECT_ID/$_SERVICE:$COMMIT_SHA \
#           --region=$_REGION \
#           --platform=managed \
#           --allow-unauthenticated \
#           --add-cloudsql-instances $_INSTANCE

# # Indica quali immagini caricare nel registry
# images:
#   - "gcr.io/$PROJECT_ID/webapppalestra:$COMMIT_SHA"

# timeout: "1200s"


options:
  defaultLogsBucketBehavior: REGIONAL_USER_OWNED_BUCKET

steps:
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        gcloud run deploy webapppalestra \
          --source . \
          --region us-east1 \
          --platform managed \
          --allow-unauthenticated \
          --add-cloudsql-instances cloud-palestra-athena:us-east1:fitness-manager \
          --set-env-vars CLOUD_SQL_CONNECTION_NAME=cloud-palestra-athena:us-east1:fitness-manager,DB_HOST=/cloudsql/cloud-palestra-athena:us-east1:fitness-manager,DB_NAME=fitness_db,DB_USER=palestra_athena,DB_PASS=P@lestra_Athena25
timeout: "1200s"
